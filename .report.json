{"created": 1648780941.7576602, "duration": 0.23985791206359863, "exitcode": 1, "root": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31", "environment": {"Python": "3.8.13", "Platform": "Windows-10-10.0.19043-SP0", "Packages": {"pytest": "6.1.2", "py": "1.9.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.5.0", "metadata": "2.0.1", "submit": "1.3.3"}}, "summary": {"passed": 4, "failed": 5, "total": 9, "collected": 9}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/__init__.py", "type": "Package"}]}, {"nodeid": "tests/Part_1/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_1/Part_1.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::test_user_table", "type": "Function", "lineno": 12}, {"nodeid": "tests/Part_1/Part_1.py::test_product_table", "type": "Function", "lineno": 24}, {"nodeid": "tests/Part_1/Part_1.py::test_join_table", "type": "Function", "lineno": 36}, {"nodeid": "tests/Part_1/Part_1.py::test_question_1", "type": "Function", "lineno": 52}, {"nodeid": "tests/Part_1/Part_1.py::test_question_2", "type": "Function", "lineno": 68}, {"nodeid": "tests/Part_1/Part_1.py::test_question_3", "type": "Function", "lineno": 73}, {"nodeid": "tests/Part_1/Part_1.py::test_question_4", "type": "Function", "lineno": 91}, {"nodeid": "tests/Part_1/Part_1.py::test_question_5", "type": "Function", "lineno": 96}, {"nodeid": "tests/Part_1/Part_1.py::test_question_6", "type": "Function", "lineno": 107}]}, {"nodeid": "tests/Part_1/conftest.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_1/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/__init__.py", "type": "Module"}, {"nodeid": "tests/Part_1/Part_1.py", "type": "Module"}, {"nodeid": "tests/Part_1/conftest.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/Part_1/Part_1.py::test_user_table", "lineno": 12, "outcome": "passed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "ds-sc-31", "test_user_table"], "setup": {"duration": 0.0072501999999999844, "outcome": "passed"}, "call": {"duration": 0.0073654000000000774, "outcome": "passed"}, "teardown": {"duration": 0.0006308999999999898, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_product_table", "lineno": 24, "outcome": "passed", "keywords": ["tests/Part_1/__init__.py", "test_product_table", "Part_1.py", "ds-sc-31"], "setup": {"duration": 0.0021116999999999386, "outcome": "passed"}, "call": {"duration": 0.006817999999999991, "outcome": "passed"}, "teardown": {"duration": 0.0005412000000000194, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_join_table", "lineno": 36, "outcome": "passed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_join_table", "ds-sc-31"], "setup": {"duration": 0.0018869000000000247, "outcome": "passed"}, "call": {"duration": 0.006511299999999998, "outcome": "passed"}, "teardown": {"duration": 0.0005621999999999572, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_1", "lineno": 52, "outcome": "passed", "keywords": ["tests/Part_1/__init__.py", "ds-sc-31", "Part_1.py", "test_question_1"], "setup": {"duration": 0.0006405999999999912, "outcome": "passed"}, "call": {"duration": 0.0008544000000000329, "outcome": "passed"}, "teardown": {"duration": 0.0003450999999999871, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_2", "lineno": 68, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "test_question_2", "Part_1.py", "ds-sc-31"], "setup": {"duration": 0.0005922999999999901, "outcome": "passed"}, "call": {"duration": 0.003761499999999973, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31\\tests\\Part_1\\Part_1.py", "lineno": 72, "message": "assert [(37,)] == [(37.22222222222222,)]\n  At index 0 diff: (37,) != (37.22222222222222,)\n  Full diff:\n  - [(37.22222222222222,)]\n  + [(37,)]"}, "traceback": [{"path": "tests\\Part_1\\Part_1.py", "lineno": 72, "message": "AssertionError"}], "longrepr": "get_answer = <function get_answer.<locals>.return_func at 0x000001E54A7A7040>\n\n    def test_question_2(get_answer):\n        expected_answer = [(37.22222222222222,)]\n    \n>       assert get_answer(Part_1.SQL_QUERY_2) == expected_answer\nE       assert [(37,)] == [(37.22222222222222,)]\nE         At index 0 diff: (37,) != (37.22222222222222,)\nE         Full diff:\nE         - [(37.22222222222222,)]\nE         + [(37,)]\n\ntests\\Part_1\\Part_1.py:72: AssertionError"}, "teardown": {"duration": 0.0004882999999999971, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_3", "lineno": 73, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "ds-sc-31", "Part_1.py", "test_question_3"], "setup": {"duration": 0.0007137000000000393, "outcome": "passed"}, "call": {"duration": 0.007934600000000014, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31\\tests\\Part_1\\Part_1.py", "lineno": 90, "message": "assert [(29, 'Th\u00fcrin...uveaux'), ...] == [(38, 'C\u00f4te d...turage'), ...]\n  At index 0 diff: (29, 'Th\u00fcringer Rostbratwurst', 123.79, \"For\u00eats d'\u00e9rables\") != (38, 'C\u00f4te de Blaye', 263.5, 'Aux joyeux eccl\u00e9siastiques')\n  Full diff:\n    [\n  +  (29, 'Th\u00fcringer Rostbratwurst', 123.79, \"For\u00eats d'\u00e9rables\"),\n  +  (9, 'Mishi Kobe Niku', 97, 'PB Kn\u00e4ckebr\u00f6d AB'),\n  +  (20, \"Sir Rodney's Marmalade\", 81, 'Leka Trading'),\n  -  (38, 'C\u00f4te de Blaye', 263.5, 'Aux joyeux eccl\u00e9siastiques'),...\n  \n  ...Full output truncated (20 lines hidden), use '-vv' to show"}, "traceback": [{"path": "tests\\Part_1\\Part_1.py", "lineno": 90, "message": "AssertionError"}], "longrepr": "get_answer = <function get_answer.<locals>.return_func at 0x000001E54A7A7DC0>\n\n    def test_question_3(get_answer):\n        expected_answer = [\n            (38, 'C\u00f4te de Blaye', 263.5, 'Aux joyeux eccl\u00e9siastiques'),\n            (29, 'Th\u00fcringer Rostbratwurst', 123.79,\n             'Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG'),\n            (9, 'Mishi Kobe Niku', 97, 'Tokyo Traders'),\n            (20, \"Sir Rodney's Marmalade\", 81, 'Specialty Biscuits, Ltd.'),\n            (18, 'Carnarvon Tigers', 62.5, 'Pavlova, Ltd.'),\n            (59, 'Raclette Courdavault', 55, 'Gai p\u00e2turage'),\n            (51, 'Manjimup Dried Apples', 53, \"G'day, Mate\"),\n            (62, 'Tarte au sucre', 49.3, \"For\u00eats d'\u00e9rables\"),\n            (43, 'Ipoh Coffee', 46, 'Leka Trading'),\n            (28, 'R\u00f6ssle Sauerkraut', 45.6,\n             'Plutzer Lebensmittelgro\u00dfm\u00e4rkte AG')\n        ]\n    \n>       assert get_answer(Part_1.SQL_QUERY_3) == expected_answer\nE       assert [(29, 'Th\u00fcrin...uveaux'), ...] == [(38, 'C\u00f4te d...turage'), ...]\nE         At index 0 diff: (29, 'Th\u00fcringer Rostbratwurst', 123.79, \"For\u00eats d'\u00e9rables\") != (38, 'C\u00f4te de Blaye', 263.5, 'Aux joyeux eccl\u00e9siastiques')\nE         Full diff:\nE           [\nE         +  (29, 'Th\u00fcringer Rostbratwurst', 123.79, \"For\u00eats d'\u00e9rables\"),\nE         +  (9, 'Mishi Kobe Niku', 97, 'PB Kn\u00e4ckebr\u00f6d AB'),\nE         +  (20, \"Sir Rodney's Marmalade\", 81, 'Leka Trading'),\nE         -  (38, 'C\u00f4te de Blaye', 263.5, 'Aux joyeux eccl\u00e9siastiques'),...\nE         \nE         ...Full output truncated (20 lines hidden), use '-vv' to show\n\ntests\\Part_1\\Part_1.py:90: AssertionError"}, "teardown": {"duration": 0.0004154000000000657, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_4", "lineno": 91, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "test_question_4", "Part_1.py", "ds-sc-31"], "setup": {"duration": 0.0006321000000000243, "outcome": "passed"}, "call": {"duration": 0.00022489999999997234, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31\\tests\\Part_1\\conftest.py", "lineno": 34, "message": "sqlite3.OperationalError: near \"SQL\": syntax error"}, "traceback": [{"path": "tests\\Part_1\\Part_1.py", "lineno": 95, "message": ""}, {"path": "tests\\Part_1\\conftest.py", "lineno": 34, "message": "OperationalError"}], "longrepr": "get_answer = <function get_answer.<locals>.return_func at 0x000001E54A821160>\n\n    def test_question_4(get_answer):\n        expected_answer = [('Confections',)]\n    \n>       assert get_answer(Part_1.SQL_QUERY_4) == expected_answer\n\ntests\\Part_1\\Part_1.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nquery = 'SQL \ucffc\ub9ac\ubb38\uc744 \uc791\uc131\ud574 \uc8fc\uc138\uc694.'\n\n    def return_func(query):\n>       return nw_cur.execute(query).fetchall()\nE       sqlite3.OperationalError: near \"SQL\": syntax error\n\ntests\\Part_1\\conftest.py:34: OperationalError"}, "teardown": {"duration": 0.00040490000000004134, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_5", "lineno": 96, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_question_5", "ds-sc-31"], "setup": {"duration": 0.0005996000000000334, "outcome": "passed"}, "call": {"duration": 0.0018576000000000148, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31\\tests\\Part_1\\Part_1.py", "lineno": 106, "message": "AssertionError: assert [(29.0, 'Kirk....0, 'Tacoma')] == [('Kirkland',...acoma', 40.0)]\n  At index 0 diff: (29.0, 'Kirkland') != ('Kirkland', 29.0)\n  Full diff:\n    [\n  -  ('Kirkland', 29.0),\n  -  ('London', 32.5),\n  -  ('Redmond', 56.0),\n  -  ('Seattle', 40.0),...\n  \n  ...Full output truncated (8 lines hidden), use '-vv' to show"}, "traceback": [{"path": "tests\\Part_1\\Part_1.py", "lineno": 106, "message": "AssertionError"}], "longrepr": "get_answer = <function get_answer.<locals>.return_func at 0x000001E54A821700>\n\n    def test_question_5(get_answer):\n        expected_answer = [\n            ('Kirkland', 29.0),\n            ('London', 32.5),\n            ('Redmond', 56.0),\n            ('Seattle', 40.0),\n            ('Tacoma', 40.0)\n        ]\n    \n>       assert get_answer(Part_1.SQL_QUERY_5) == expected_answer\nE       AssertionError: assert [(29.0, 'Kirk....0, 'Tacoma')] == [('Kirkland',...acoma', 40.0)]\nE         At index 0 diff: (29.0, 'Kirkland') != ('Kirkland', 29.0)\nE         Full diff:\nE           [\nE         -  ('Kirkland', 29.0),\nE         -  ('London', 32.5),\nE         -  ('Redmond', 56.0),\nE         -  ('Seattle', 40.0),...\nE         \nE         ...Full output truncated (8 lines hidden), use '-vv' to show\n\ntests\\Part_1\\Part_1.py:106: AssertionError"}, "teardown": {"duration": 0.0003643000000000951, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::test_question_6", "lineno": 107, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "test_question_6", "Part_1.py", "ds-sc-31"], "setup": {"duration": 0.0006078999999999946, "outcome": "passed"}, "call": {"duration": 0.0013753000000000792, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sc-31\\tests\\Part_1\\Part_1.py", "lineno": 111, "message": "AssertionError: assert [(1, 'Davolio...ama', 5), ...] == [(7, 'King', 10)]\n  At index 0 diff: (1, 'Davolio', 2) != (7, 'King', 10)\n  Left contains 8 more items, first extra item: (2, 'Fuller', 7)\n  Full diff:\n    [\n  +  (1,\n  +   'Davolio',\n  +   2),...\n  \n  ...Full output truncated (26 lines hidden), use '-vv' to show"}, "traceback": [{"path": "tests\\Part_1\\Part_1.py", "lineno": 111, "message": "AssertionError"}], "longrepr": "get_answer = <function get_answer.<locals>.return_func at 0x000001E54A8211F0>\n\n    def test_question_6(get_answer):\n        expected_answer = [(7, 'King', 10)]\n    \n>       assert get_answer(Part_1.SQL_QUERY_6) == expected_answer\nE       AssertionError: assert [(1, 'Davolio...ama', 5), ...] == [(7, 'King', 10)]\nE         At index 0 diff: (1, 'Davolio', 2) != (7, 'King', 10)\nE         Left contains 8 more items, first extra item: (2, 'Fuller', 7)\nE         Full diff:\nE           [\nE         +  (1,\nE         +   'Davolio',\nE         +   2),...\nE         \nE         ...Full output truncated (26 lines hidden), use '-vv' to show\n\ntests\\Part_1\\Part_1.py:111: AssertionError"}, "teardown": {"duration": 0.00044480000000002295, "outcome": "passed"}}]}